{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cihan\\\\Desktop\\\\react-ram\\\\src\\\\components\\\\Cards\\\\Cards.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Cards = ({\n  results\n}) => {\n  let display;\n  console.log(results);\n  if (results) {\n    display = results.map(x => {\n      let {\n        id,\n        name,\n        image,\n        location\n      } = x;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: image,\n            className: \"img-fluid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"fs-4 fw-bold mb-5\",\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 16,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"fs-3\",\n                children: \"Last location\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 20,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"fs-5\",\n                children: location.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 23,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 21\n        }, this)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this);\n    });\n  } else {\n    display = \"0 Character Found\";\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: display\n  }, void 0, false);\n};\n_c = Cards;\nexport default Cards;\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","Cards","results","display","console","log","map","x","id","name","image","location","className","children","src","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/cihan/Desktop/react-ram/src/components/Cards/Cards.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst Cards = ({ results }) => {\r\n\r\n    let display;\r\n    console.log(results);\r\n\r\n    if (results) {\r\n        display = results.map((x) => {\r\n            let { id, name, image, location } = x;\r\n            return (\r\n                <div key={id} className=\"col-4\">\r\n                    <div className=\"\">\r\n                        <img src={image} className=\"img-fluid\" />\r\n                        <div className='content'>\r\n                            <div className='fs-4 fw-bold mb-5'>\r\n                                {name}\r\n                            </div>\r\n                            <div className=''>\r\n                                <div className='fs-3'>\r\n                                    Last location\r\n                                </div>\r\n                                <div className='fs-5'>\r\n                                     {location.name}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n                </div>);\r\n        });\r\n    }\r\n    else {\r\n        display = \"0 Character Found\";\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {display}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Cards\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,KAAK,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAE3B,IAAIC,OAAO;EACXC,OAAO,CAACC,GAAG,CAACH,OAAO,CAAC;EAEpB,IAAIA,OAAO,EAAE;IACTC,OAAO,GAAGD,OAAO,CAACI,GAAG,CAAEC,CAAC,IAAK;MACzB,IAAI;QAAEC,EAAE;QAAEC,IAAI;QAAEC,KAAK;QAAEC;MAAS,CAAC,GAAGJ,CAAC;MACrC,oBACIT,OAAA;QAAcc,SAAS,EAAC,OAAO;QAAAC,QAAA,eAC3Bf,OAAA;UAAKc,SAAS,EAAC,EAAE;UAAAC,QAAA,gBACbf,OAAA;YAAKgB,GAAG,EAAEJ,KAAM;YAACE,SAAS,EAAC;UAAW;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACzCpB,OAAA;YAAKc,SAAS,EAAC,SAAS;YAAAC,QAAA,gBACpBf,OAAA;cAAKc,SAAS,EAAC,mBAAmB;cAAAC,QAAA,EAC7BJ;YAAI;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACJ,CAAC,eACNpB,OAAA;cAAKc,SAAS,EAAC,EAAE;cAAAC,QAAA,gBACbf,OAAA;gBAAKc,SAAS,EAAC,MAAM;gBAAAC,QAAA,EAAC;cAEtB;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACNpB,OAAA;gBAAKc,SAAS,EAAC,MAAM;gBAAAC,QAAA,EACfF,QAAQ,CAACF;cAAI;gBAAAM,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACd,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL;MAAC,GAhBAV,EAAE;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAoBP,CAAC;IACd,CAAC,CAAC;EACN,CAAC,MACI;IACDf,OAAO,GAAG,mBAAmB;EACjC;EAKA,oBACIL,OAAA,CAAAE,SAAA;IAAAa,QAAA,EACKV;EAAO,gBACV,CAAC;AAEX,CAAC;AAAAgB,EAAA,GA5CKlB,KAAK;AA8CX,eAAeA,KAAK;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}